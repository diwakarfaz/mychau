#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="COBAO")]
	public partial class COBAOLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietKhamXet(ChiTietKhamXet instance);
    partial void UpdateChiTietKhamXet(ChiTietKhamXet instance);
    partial void DeleteChiTietKhamXet(ChiTietKhamXet instance);
    partial void InsertTram(Tram instance);
    partial void UpdateTram(Tram instance);
    partial void DeleteTram(Tram instance);
    partial void InsertChiTietThuongTruc(ChiTietThuongTruc instance);
    partial void UpdateChiTietThuongTruc(ChiTietThuongTruc instance);
    partial void DeleteChiTietThuongTruc(ChiTietThuongTruc instance);
    partial void InsertCoBao(CoBao instance);
    partial void UpdateCoBao(CoBao instance);
    partial void DeleteCoBao(CoBao instance);
    partial void InsertCoBaoLaiTau(CoBaoLaiTau instance);
    partial void UpdateCoBaoLaiTau(CoBaoLaiTau instance);
    partial void DeleteCoBaoLaiTau(CoBaoLaiTau instance);
    partial void InsertCongTy(CongTy instance);
    partial void UpdateCongTy(CongTy instance);
    partial void DeleteCongTy(CongTy instance);
    partial void InsertDauMay(DauMay instance);
    partial void UpdateDauMay(DauMay instance);
    partial void DeleteDauMay(DauMay instance);
    partial void InsertDoi(Doi instance);
    partial void UpdateDoi(Doi instance);
    partial void DeleteDoi(Doi instance);
    partial void InsertDonGiaLuongBoSung(DonGiaLuongBoSung instance);
    partial void UpdateDonGiaLuongBoSung(DonGiaLuongBoSung instance);
    partial void DeleteDonGiaLuongBoSung(DonGiaLuongBoSung instance);
    partial void InsertDonGiaLuongXL(DonGiaLuongXL instance);
    partial void UpdateDonGiaLuongXL(DonGiaLuongXL instance);
    partial void DeleteDonGiaLuongXL(DonGiaLuongXL instance);
    partial void InsertGa(Ga instance);
    partial void UpdateGa(Ga instance);
    partial void DeleteGa(Ga instance);
    partial void InsertHanhTrinh(HanhTrinh instance);
    partial void UpdateHanhTrinh(HanhTrinh instance);
    partial void DeleteHanhTrinh(HanhTrinh instance);
    partial void InsertHopPhepOm(HopPhepOm instance);
    partial void UpdateHopPhepOm(HopPhepOm instance);
    partial void DeleteHopPhepOm(HopPhepOm instance);
    partial void InsertKhamXet(KhamXet instance);
    partial void UpdateKhamXet(KhamXet instance);
    partial void DeleteKhamXet(KhamXet instance);
    partial void InsertLoaiDauMay(LoaiDauMay instance);
    partial void UpdateLoaiDauMay(LoaiDauMay instance);
    partial void DeleteLoaiDauMay(LoaiDauMay instance);
    partial void InsertMacTau(MacTau instance);
    partial void UpdateMacTau(MacTau instance);
    partial void DeleteMacTau(MacTau instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertTaiXe(TaiXe instance);
    partial void UpdateTaiXe(TaiXe instance);
    partial void DeleteTaiXe(TaiXe instance);
    partial void InsertTheoTau(TheoTau instance);
    partial void UpdateTheoTau(TheoTau instance);
    partial void DeleteTheoTau(TheoTau instance);
    partial void InsertThuongTruc(ThuongTruc instance);
    partial void UpdateThuongTruc(ThuongTruc instance);
    partial void DeleteThuongTruc(ThuongTruc instance);
    partial void InsertTo(To instance);
    partial void UpdateTo(To instance);
    partial void DeleteTo(To instance);
    #endregion
		
		public COBAOLINQDataContext() : 
				base(global::DAL.Properties.Settings.Default.COBAOConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public COBAOLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public COBAOLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public COBAOLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public COBAOLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietKhamXet> ChiTietKhamXets
		{
			get
			{
				return this.GetTable<ChiTietKhamXet>();
			}
		}
		
		public System.Data.Linq.Table<Tram> Trams
		{
			get
			{
				return this.GetTable<Tram>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietThuongTruc> ChiTietThuongTrucs
		{
			get
			{
				return this.GetTable<ChiTietThuongTruc>();
			}
		}
		
		public System.Data.Linq.Table<CoBao> CoBaos
		{
			get
			{
				return this.GetTable<CoBao>();
			}
		}
		
		public System.Data.Linq.Table<CoBaoLaiTau> CoBaoLaiTaus
		{
			get
			{
				return this.GetTable<CoBaoLaiTau>();
			}
		}
		
		public System.Data.Linq.Table<CongTy> CongTies
		{
			get
			{
				return this.GetTable<CongTy>();
			}
		}
		
		public System.Data.Linq.Table<DauMay> DauMays
		{
			get
			{
				return this.GetTable<DauMay>();
			}
		}
		
		public System.Data.Linq.Table<Doi> Dois
		{
			get
			{
				return this.GetTable<Doi>();
			}
		}
		
		public System.Data.Linq.Table<DonGiaLuongBoSung> DonGiaLuongBoSungs
		{
			get
			{
				return this.GetTable<DonGiaLuongBoSung>();
			}
		}
		
		public System.Data.Linq.Table<DonGiaLuongXL> DonGiaLuongXLs
		{
			get
			{
				return this.GetTable<DonGiaLuongXL>();
			}
		}
		
		public System.Data.Linq.Table<Ga> Gas
		{
			get
			{
				return this.GetTable<Ga>();
			}
		}
		
		public System.Data.Linq.Table<HanhTrinh> HanhTrinhs
		{
			get
			{
				return this.GetTable<HanhTrinh>();
			}
		}
		
		public System.Data.Linq.Table<HopPhepOm> HopPhepOms
		{
			get
			{
				return this.GetTable<HopPhepOm>();
			}
		}
		
		public System.Data.Linq.Table<KhamXet> KhamXets
		{
			get
			{
				return this.GetTable<KhamXet>();
			}
		}
		
		public System.Data.Linq.Table<LoaiDauMay> LoaiDauMays
		{
			get
			{
				return this.GetTable<LoaiDauMay>();
			}
		}
		
		public System.Data.Linq.Table<MacTau> MacTaus
		{
			get
			{
				return this.GetTable<MacTau>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<TaiXe> TaiXes
		{
			get
			{
				return this.GetTable<TaiXe>();
			}
		}
		
		public System.Data.Linq.Table<TheoTau> TheoTaus
		{
			get
			{
				return this.GetTable<TheoTau>();
			}
		}
		
		public System.Data.Linq.Table<ThuongTruc> ThuongTrucs
		{
			get
			{
				return this.GetTable<ThuongTruc>();
			}
		}
		
		public System.Data.Linq.Table<To> Tos
		{
			get
			{
				return this.GetTable<To>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietKhamXet")]
	public partial class ChiTietKhamXet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaChiTietKX;
		
		private System.Guid _MaKhamXet;
		
		private string _MaTaiXe;
		
		private bool _Tai;
		
		private EntityRef<KhamXet> _KhamXet;
		
		private EntityRef<TaiXe> _TaiXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietKXChanging(System.Guid value);
    partial void OnMaChiTietKXChanged();
    partial void OnMaKhamXetChanging(System.Guid value);
    partial void OnMaKhamXetChanged();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTaiChanging(bool value);
    partial void OnTaiChanged();
    #endregion
		
		public ChiTietKhamXet()
		{
			this._KhamXet = default(EntityRef<KhamXet>);
			this._TaiXe = default(EntityRef<TaiXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietKX", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaChiTietKX
		{
			get
			{
				return this._MaChiTietKX;
			}
			set
			{
				if ((this._MaChiTietKX != value))
				{
					this.OnMaChiTietKXChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietKX = value;
					this.SendPropertyChanged("MaChiTietKX");
					this.OnMaChiTietKXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhamXet", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaKhamXet
		{
			get
			{
				return this._MaKhamXet;
			}
			set
			{
				if ((this._MaKhamXet != value))
				{
					if (this._KhamXet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhamXetChanging(value);
					this.SendPropertyChanging();
					this._MaKhamXet = value;
					this.SendPropertyChanged("MaKhamXet");
					this.OnMaKhamXetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._TaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tai", DbType="Bit NOT NULL")]
		public bool Tai
		{
			get
			{
				return this._Tai;
			}
			set
			{
				if ((this._Tai != value))
				{
					this.OnTaiChanging(value);
					this.SendPropertyChanging();
					this._Tai = value;
					this.SendPropertyChanged("Tai");
					this.OnTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhamXet_ChiTietKhamXet", Storage="_KhamXet", ThisKey="MaKhamXet", OtherKey="MaKhamXet", IsForeignKey=true)]
		public KhamXet KhamXet
		{
			get
			{
				return this._KhamXet.Entity;
			}
			set
			{
				KhamXet previousValue = this._KhamXet.Entity;
				if (((previousValue != value) 
							|| (this._KhamXet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhamXet.Entity = null;
						previousValue.ChiTietKhamXets.Remove(this);
					}
					this._KhamXet.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhamXets.Add(this);
						this._MaKhamXet = value.MaKhamXet;
					}
					else
					{
						this._MaKhamXet = default(System.Guid);
					}
					this.SendPropertyChanged("KhamXet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_ChiTietKhamXet", Storage="_TaiXe", ThisKey="MaTaiXe", OtherKey="MaTaiXe", IsForeignKey=true)]
		public TaiXe TaiXe
		{
			get
			{
				return this._TaiXe.Entity;
			}
			set
			{
				TaiXe previousValue = this._TaiXe.Entity;
				if (((previousValue != value) 
							|| (this._TaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiXe.Entity = null;
						previousValue.ChiTietKhamXets.Remove(this);
					}
					this._TaiXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhamXets.Add(this);
						this._MaTaiXe = value.MaTaiXe;
					}
					else
					{
						this._MaTaiXe = default(string);
					}
					this.SendPropertyChanged("TaiXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tram")]
	public partial class Tram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaTram;
		
		private string _TenTram;
		
		private EntitySet<Doi> _Dois;
		
		private EntitySet<ThuongTruc> _ThuongTrucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTramChanging(System.Guid value);
    partial void OnMaTramChanged();
    partial void OnTenTramChanging(string value);
    partial void OnTenTramChanged();
    #endregion
		
		public Tram()
		{
			this._Dois = new EntitySet<Doi>(new Action<Doi>(this.attach_Dois), new Action<Doi>(this.detach_Dois));
			this._ThuongTrucs = new EntitySet<ThuongTruc>(new Action<ThuongTruc>(this.attach_ThuongTrucs), new Action<ThuongTruc>(this.detach_ThuongTrucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTram", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaTram
		{
			get
			{
				return this._MaTram;
			}
			set
			{
				if ((this._MaTram != value))
				{
					this.OnMaTramChanging(value);
					this.SendPropertyChanging();
					this._MaTram = value;
					this.SendPropertyChanged("MaTram");
					this.OnMaTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTram", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTram
		{
			get
			{
				return this._TenTram;
			}
			set
			{
				if ((this._TenTram != value))
				{
					this.OnTenTramChanging(value);
					this.SendPropertyChanging();
					this._TenTram = value;
					this.SendPropertyChanged("TenTram");
					this.OnTenTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tram_Doi", Storage="_Dois", ThisKey="MaTram", OtherKey="MaTram")]
		public EntitySet<Doi> Dois
		{
			get
			{
				return this._Dois;
			}
			set
			{
				this._Dois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tram_ThuongTruc", Storage="_ThuongTrucs", ThisKey="MaTram", OtherKey="MaTram")]
		public EntitySet<ThuongTruc> ThuongTrucs
		{
			get
			{
				return this._ThuongTrucs;
			}
			set
			{
				this._ThuongTrucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dois(Doi entity)
		{
			this.SendPropertyChanging();
			entity.Tram = this;
		}
		
		private void detach_Dois(Doi entity)
		{
			this.SendPropertyChanging();
			entity.Tram = null;
		}
		
		private void attach_ThuongTrucs(ThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.Tram = this;
		}
		
		private void detach_ThuongTrucs(ThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.Tram = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietThuongTruc")]
	public partial class ChiTietThuongTruc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaChiTiet;
		
		private System.Guid _MaThuongTruc;
		
		private string _MaTaiXe;
		
		private bool _Tai;
		
		private EntityRef<TaiXe> _TaiXe;
		
		private EntityRef<ThuongTruc> _ThuongTruc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietChanging(System.Guid value);
    partial void OnMaChiTietChanged();
    partial void OnMaThuongTrucChanging(System.Guid value);
    partial void OnMaThuongTrucChanged();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTaiChanging(bool value);
    partial void OnTaiChanged();
    #endregion
		
		public ChiTietThuongTruc()
		{
			this._TaiXe = default(EntityRef<TaiXe>);
			this._ThuongTruc = default(EntityRef<ThuongTruc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTiet", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaChiTiet
		{
			get
			{
				return this._MaChiTiet;
			}
			set
			{
				if ((this._MaChiTiet != value))
				{
					this.OnMaChiTietChanging(value);
					this.SendPropertyChanging();
					this._MaChiTiet = value;
					this.SendPropertyChanged("MaChiTiet");
					this.OnMaChiTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuongTruc", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaThuongTruc
		{
			get
			{
				return this._MaThuongTruc;
			}
			set
			{
				if ((this._MaThuongTruc != value))
				{
					if (this._ThuongTruc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThuongTrucChanging(value);
					this.SendPropertyChanging();
					this._MaThuongTruc = value;
					this.SendPropertyChanged("MaThuongTruc");
					this.OnMaThuongTrucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._TaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tai", DbType="Bit NOT NULL")]
		public bool Tai
		{
			get
			{
				return this._Tai;
			}
			set
			{
				if ((this._Tai != value))
				{
					this.OnTaiChanging(value);
					this.SendPropertyChanging();
					this._Tai = value;
					this.SendPropertyChanged("Tai");
					this.OnTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_ChiTietThuongTruc", Storage="_TaiXe", ThisKey="MaTaiXe", OtherKey="MaTaiXe", IsForeignKey=true)]
		public TaiXe TaiXe
		{
			get
			{
				return this._TaiXe.Entity;
			}
			set
			{
				TaiXe previousValue = this._TaiXe.Entity;
				if (((previousValue != value) 
							|| (this._TaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiXe.Entity = null;
						previousValue.ChiTietThuongTrucs.Remove(this);
					}
					this._TaiXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietThuongTrucs.Add(this);
						this._MaTaiXe = value.MaTaiXe;
					}
					else
					{
						this._MaTaiXe = default(string);
					}
					this.SendPropertyChanged("TaiXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongTruc_ChiTietThuongTruc", Storage="_ThuongTruc", ThisKey="MaThuongTruc", OtherKey="MaThuongTruc", IsForeignKey=true)]
		public ThuongTruc ThuongTruc
		{
			get
			{
				return this._ThuongTruc.Entity;
			}
			set
			{
				ThuongTruc previousValue = this._ThuongTruc.Entity;
				if (((previousValue != value) 
							|| (this._ThuongTruc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongTruc.Entity = null;
						previousValue.ChiTietThuongTrucs.Remove(this);
					}
					this._ThuongTruc.Entity = value;
					if ((value != null))
					{
						value.ChiTietThuongTrucs.Add(this);
						this._MaThuongTruc = value.MaThuongTruc;
					}
					else
					{
						this._MaThuongTruc = default(System.Guid);
					}
					this.SendPropertyChanged("ThuongTruc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoBao")]
	public partial class CoBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoCoBao;
		
		private System.Guid _MaNV;
		
		private string _MaDM;
		
		private string _MaMacTau;
		
		private System.DateTime _NgayGioNhanMay;
		
		private System.DateTime _NgayGioGiaoMay;
		
		private string _XepLoai;
		
		private string _LyDoXL;
		
		private EntitySet<CoBaoLaiTau> _CoBaoLaiTaus;
		
		private EntitySet<HanhTrinh> _HanhTrinhs;
		
		private EntitySet<TheoTau> _TheoTaus;
		
		private EntityRef<DauMay> _DauMay;
		
		private EntityRef<MacTau> _MacTau;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoCoBaoChanging(string value);
    partial void OnSoCoBaoChanged();
    partial void OnMaNVChanging(System.Guid value);
    partial void OnMaNVChanged();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnMaMacTauChanging(string value);
    partial void OnMaMacTauChanged();
    partial void OnNgayGioNhanMayChanging(System.DateTime value);
    partial void OnNgayGioNhanMayChanged();
    partial void OnNgayGioGiaoMayChanging(System.DateTime value);
    partial void OnNgayGioGiaoMayChanged();
    partial void OnXepLoaiChanging(string value);
    partial void OnXepLoaiChanged();
    partial void OnLyDoXLChanging(string value);
    partial void OnLyDoXLChanged();
    #endregion
		
		public CoBao()
		{
			this._CoBaoLaiTaus = new EntitySet<CoBaoLaiTau>(new Action<CoBaoLaiTau>(this.attach_CoBaoLaiTaus), new Action<CoBaoLaiTau>(this.detach_CoBaoLaiTaus));
			this._HanhTrinhs = new EntitySet<HanhTrinh>(new Action<HanhTrinh>(this.attach_HanhTrinhs), new Action<HanhTrinh>(this.detach_HanhTrinhs));
			this._TheoTaus = new EntitySet<TheoTau>(new Action<TheoTau>(this.attach_TheoTaus), new Action<TheoTau>(this.detach_TheoTaus));
			this._DauMay = default(EntityRef<DauMay>);
			this._MacTau = default(EntityRef<MacTau>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCoBao", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoCoBao
		{
			get
			{
				return this._SoCoBao;
			}
			set
			{
				if ((this._SoCoBao != value))
				{
					this.OnSoCoBaoChanging(value);
					this.SendPropertyChanging();
					this._SoCoBao = value;
					this.SendPropertyChanged("SoCoBao");
					this.OnSoCoBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					if (this._DauMay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMacTau", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaMacTau
		{
			get
			{
				return this._MaMacTau;
			}
			set
			{
				if ((this._MaMacTau != value))
				{
					if (this._MacTau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMacTauChanging(value);
					this.SendPropertyChanging();
					this._MaMacTau = value;
					this.SendPropertyChanged("MaMacTau");
					this.OnMaMacTauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioNhanMay", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioNhanMay
		{
			get
			{
				return this._NgayGioNhanMay;
			}
			set
			{
				if ((this._NgayGioNhanMay != value))
				{
					this.OnNgayGioNhanMayChanging(value);
					this.SendPropertyChanging();
					this._NgayGioNhanMay = value;
					this.SendPropertyChanged("NgayGioNhanMay");
					this.OnNgayGioNhanMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioGiaoMay", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioGiaoMay
		{
			get
			{
				return this._NgayGioGiaoMay;
			}
			set
			{
				if ((this._NgayGioGiaoMay != value))
				{
					this.OnNgayGioGiaoMayChanging(value);
					this.SendPropertyChanging();
					this._NgayGioGiaoMay = value;
					this.SendPropertyChanged("NgayGioGiaoMay");
					this.OnNgayGioGiaoMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XepLoai", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string XepLoai
		{
			get
			{
				return this._XepLoai;
			}
			set
			{
				if ((this._XepLoai != value))
				{
					this.OnXepLoaiChanging(value);
					this.SendPropertyChanging();
					this._XepLoai = value;
					this.SendPropertyChanged("XepLoai");
					this.OnXepLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDoXL", DbType="NVarChar(50)")]
		public string LyDoXL
		{
			get
			{
				return this._LyDoXL;
			}
			set
			{
				if ((this._LyDoXL != value))
				{
					this.OnLyDoXLChanging(value);
					this.SendPropertyChanging();
					this._LyDoXL = value;
					this.SendPropertyChanged("LyDoXL");
					this.OnLyDoXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_CoBaoLaiTau", Storage="_CoBaoLaiTaus", ThisKey="SoCoBao", OtherKey="SoCoBao")]
		public EntitySet<CoBaoLaiTau> CoBaoLaiTaus
		{
			get
			{
				return this._CoBaoLaiTaus;
			}
			set
			{
				this._CoBaoLaiTaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_HanhTrinh", Storage="_HanhTrinhs", ThisKey="SoCoBao", OtherKey="SoCoBao")]
		public EntitySet<HanhTrinh> HanhTrinhs
		{
			get
			{
				return this._HanhTrinhs;
			}
			set
			{
				this._HanhTrinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_TheoTau", Storage="_TheoTaus", ThisKey="SoCoBao", OtherKey="SoCoBao")]
		public EntitySet<TheoTau> TheoTaus
		{
			get
			{
				return this._TheoTaus;
			}
			set
			{
				this._TheoTaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauMay_CoBao", Storage="_DauMay", ThisKey="MaDM", OtherKey="MaDM", IsForeignKey=true)]
		public DauMay DauMay
		{
			get
			{
				return this._DauMay.Entity;
			}
			set
			{
				DauMay previousValue = this._DauMay.Entity;
				if (((previousValue != value) 
							|| (this._DauMay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DauMay.Entity = null;
						previousValue.CoBaos.Remove(this);
					}
					this._DauMay.Entity = value;
					if ((value != null))
					{
						value.CoBaos.Add(this);
						this._MaDM = value.MaDM;
					}
					else
					{
						this._MaDM = default(string);
					}
					this.SendPropertyChanged("DauMay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MacTau_CoBao", Storage="_MacTau", ThisKey="MaMacTau", OtherKey="MaMacTau", IsForeignKey=true)]
		public MacTau MacTau
		{
			get
			{
				return this._MacTau.Entity;
			}
			set
			{
				MacTau previousValue = this._MacTau.Entity;
				if (((previousValue != value) 
							|| (this._MacTau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MacTau.Entity = null;
						previousValue.CoBaos.Remove(this);
					}
					this._MacTau.Entity = value;
					if ((value != null))
					{
						value.CoBaos.Add(this);
						this._MaMacTau = value.MaMacTau;
					}
					else
					{
						this._MaMacTau = default(string);
					}
					this.SendPropertyChanged("MacTau");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CoBao", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.CoBaos.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.CoBaos.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(System.Guid);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoBaoLaiTaus(CoBaoLaiTau entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = this;
		}
		
		private void detach_CoBaoLaiTaus(CoBaoLaiTau entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = null;
		}
		
		private void attach_HanhTrinhs(HanhTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = this;
		}
		
		private void detach_HanhTrinhs(HanhTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = null;
		}
		
		private void attach_TheoTaus(TheoTau entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = this;
		}
		
		private void detach_TheoTaus(TheoTau entity)
		{
			this.SendPropertyChanging();
			entity.CoBao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoBaoLaiTau")]
	public partial class CoBaoLaiTau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCoBaolai;
		
		private string _SoCoBao;
		
		private string _MaTaiXe;
		
		private bool _Tai;
		
		private System.Nullable<decimal> _GioLuuTru;
		
		private EntityRef<CoBao> _CoBao;
		
		private EntityRef<TaiXe> _TaiXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCoBaolaiChanging(System.Guid value);
    partial void OnMaCoBaolaiChanged();
    partial void OnSoCoBaoChanging(string value);
    partial void OnSoCoBaoChanged();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTaiChanging(bool value);
    partial void OnTaiChanged();
    partial void OnGioLuuTruChanging(System.Nullable<decimal> value);
    partial void OnGioLuuTruChanged();
    #endregion
		
		public CoBaoLaiTau()
		{
			this._CoBao = default(EntityRef<CoBao>);
			this._TaiXe = default(EntityRef<TaiXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCoBaolai", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCoBaolai
		{
			get
			{
				return this._MaCoBaolai;
			}
			set
			{
				if ((this._MaCoBaolai != value))
				{
					this.OnMaCoBaolaiChanging(value);
					this.SendPropertyChanging();
					this._MaCoBaolai = value;
					this.SendPropertyChanged("MaCoBaolai");
					this.OnMaCoBaolaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCoBao", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string SoCoBao
		{
			get
			{
				return this._SoCoBao;
			}
			set
			{
				if ((this._SoCoBao != value))
				{
					if (this._CoBao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoCoBaoChanging(value);
					this.SendPropertyChanging();
					this._SoCoBao = value;
					this.SendPropertyChanged("SoCoBao");
					this.OnSoCoBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._TaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tai", DbType="Bit NOT NULL")]
		public bool Tai
		{
			get
			{
				return this._Tai;
			}
			set
			{
				if ((this._Tai != value))
				{
					this.OnTaiChanging(value);
					this.SendPropertyChanging();
					this._Tai = value;
					this.SendPropertyChanged("Tai");
					this.OnTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioLuuTru", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GioLuuTru
		{
			get
			{
				return this._GioLuuTru;
			}
			set
			{
				if ((this._GioLuuTru != value))
				{
					this.OnGioLuuTruChanging(value);
					this.SendPropertyChanging();
					this._GioLuuTru = value;
					this.SendPropertyChanged("GioLuuTru");
					this.OnGioLuuTruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_CoBaoLaiTau", Storage="_CoBao", ThisKey="SoCoBao", OtherKey="SoCoBao", IsForeignKey=true)]
		public CoBao CoBao
		{
			get
			{
				return this._CoBao.Entity;
			}
			set
			{
				CoBao previousValue = this._CoBao.Entity;
				if (((previousValue != value) 
							|| (this._CoBao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoBao.Entity = null;
						previousValue.CoBaoLaiTaus.Remove(this);
					}
					this._CoBao.Entity = value;
					if ((value != null))
					{
						value.CoBaoLaiTaus.Add(this);
						this._SoCoBao = value.SoCoBao;
					}
					else
					{
						this._SoCoBao = default(string);
					}
					this.SendPropertyChanged("CoBao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_CoBaoLaiTau", Storage="_TaiXe", ThisKey="MaTaiXe", OtherKey="MaTaiXe", IsForeignKey=true)]
		public TaiXe TaiXe
		{
			get
			{
				return this._TaiXe.Entity;
			}
			set
			{
				TaiXe previousValue = this._TaiXe.Entity;
				if (((previousValue != value) 
							|| (this._TaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiXe.Entity = null;
						previousValue.CoBaoLaiTaus.Remove(this);
					}
					this._TaiXe.Entity = value;
					if ((value != null))
					{
						value.CoBaoLaiTaus.Add(this);
						this._MaTaiXe = value.MaTaiXe;
					}
					else
					{
						this._MaTaiXe = default(string);
					}
					this.SendPropertyChanged("TaiXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongTy")]
	public partial class CongTy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCT;
		
		private string _TenCT;
		
		private EntitySet<MacTau> _MacTaus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(System.Guid value);
    partial void OnMaCTChanged();
    partial void OnTenCTChanging(string value);
    partial void OnTenCTChanged();
    #endregion
		
		public CongTy()
		{
			this._MacTaus = new EntitySet<MacTau>(new Action<MacTau>(this.attach_MacTaus), new Action<MacTau>(this.detach_MacTaus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenCT
		{
			get
			{
				return this._TenCT;
			}
			set
			{
				if ((this._TenCT != value))
				{
					this.OnTenCTChanging(value);
					this.SendPropertyChanging();
					this._TenCT = value;
					this.SendPropertyChanged("TenCT");
					this.OnTenCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTy_MacTau", Storage="_MacTaus", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<MacTau> MacTaus
		{
			get
			{
				return this._MacTaus;
			}
			set
			{
				this._MacTaus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MacTaus(MacTau entity)
		{
			this.SendPropertyChanging();
			entity.CongTy = this;
		}
		
		private void detach_MacTaus(MacTau entity)
		{
			this.SendPropertyChanging();
			entity.CongTy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DauMay")]
	public partial class DauMay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDM;
		
		private System.Guid _MaLoai;
		
		private string _TenDM;
		
		private EntitySet<CoBao> _CoBaos;
		
		private EntitySet<KhamXet> _KhamXets;
		
		private EntityRef<LoaiDauMay> _LoaiDauMay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnMaLoaiChanging(System.Guid value);
    partial void OnMaLoaiChanged();
    partial void OnTenDMChanging(string value);
    partial void OnTenDMChanged();
    #endregion
		
		public DauMay()
		{
			this._CoBaos = new EntitySet<CoBao>(new Action<CoBao>(this.attach_CoBaos), new Action<CoBao>(this.detach_CoBaos));
			this._KhamXets = new EntitySet<KhamXet>(new Action<KhamXet>(this.attach_KhamXets), new Action<KhamXet>(this.detach_KhamXets));
			this._LoaiDauMay = default(EntityRef<LoaiDauMay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiDauMay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDM
		{
			get
			{
				return this._TenDM;
			}
			set
			{
				if ((this._TenDM != value))
				{
					this.OnTenDMChanging(value);
					this.SendPropertyChanging();
					this._TenDM = value;
					this.SendPropertyChanged("TenDM");
					this.OnTenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauMay_CoBao", Storage="_CoBaos", ThisKey="MaDM", OtherKey="MaDM")]
		public EntitySet<CoBao> CoBaos
		{
			get
			{
				return this._CoBaos;
			}
			set
			{
				this._CoBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauMay_KhamXet", Storage="_KhamXets", ThisKey="MaDM", OtherKey="MaDM")]
		public EntitySet<KhamXet> KhamXets
		{
			get
			{
				return this._KhamXets;
			}
			set
			{
				this._KhamXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDauMay_DauMay", Storage="_LoaiDauMay", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiDauMay LoaiDauMay
		{
			get
			{
				return this._LoaiDauMay.Entity;
			}
			set
			{
				LoaiDauMay previousValue = this._LoaiDauMay.Entity;
				if (((previousValue != value) 
							|| (this._LoaiDauMay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiDauMay.Entity = null;
						previousValue.DauMays.Remove(this);
					}
					this._LoaiDauMay.Entity = value;
					if ((value != null))
					{
						value.DauMays.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(System.Guid);
					}
					this.SendPropertyChanged("LoaiDauMay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.DauMay = this;
		}
		
		private void detach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.DauMay = null;
		}
		
		private void attach_KhamXets(KhamXet entity)
		{
			this.SendPropertyChanging();
			entity.DauMay = this;
		}
		
		private void detach_KhamXets(KhamXet entity)
		{
			this.SendPropertyChanging();
			entity.DauMay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doi")]
	public partial class Doi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaDoi;
		
		private string _TenDoi;
		
		private System.Guid _MaTram;
		
		private EntitySet<To> _Tos;
		
		private EntityRef<Tram> _Tram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoiChanging(System.Guid value);
    partial void OnMaDoiChanged();
    partial void OnTenDoiChanging(string value);
    partial void OnTenDoiChanged();
    partial void OnMaTramChanging(System.Guid value);
    partial void OnMaTramChanged();
    #endregion
		
		public Doi()
		{
			this._Tos = new EntitySet<To>(new Action<To>(this.attach_Tos), new Action<To>(this.detach_Tos));
			this._Tram = default(EntityRef<Tram>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaDoi
		{
			get
			{
				return this._MaDoi;
			}
			set
			{
				if ((this._MaDoi != value))
				{
					this.OnMaDoiChanging(value);
					this.SendPropertyChanging();
					this._MaDoi = value;
					this.SendPropertyChanged("MaDoi");
					this.OnMaDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDoi
		{
			get
			{
				return this._TenDoi;
			}
			set
			{
				if ((this._TenDoi != value))
				{
					this.OnTenDoiChanging(value);
					this.SendPropertyChanging();
					this._TenDoi = value;
					this.SendPropertyChanged("TenDoi");
					this.OnTenDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTram", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaTram
		{
			get
			{
				return this._MaTram;
			}
			set
			{
				if ((this._MaTram != value))
				{
					if (this._Tram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTramChanging(value);
					this.SendPropertyChanging();
					this._MaTram = value;
					this.SendPropertyChanged("MaTram");
					this.OnMaTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doi_To", Storage="_Tos", ThisKey="MaDoi", OtherKey="MaDoi")]
		public EntitySet<To> Tos
		{
			get
			{
				return this._Tos;
			}
			set
			{
				this._Tos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tram_Doi", Storage="_Tram", ThisKey="MaTram", OtherKey="MaTram", IsForeignKey=true)]
		public Tram Tram
		{
			get
			{
				return this._Tram.Entity;
			}
			set
			{
				Tram previousValue = this._Tram.Entity;
				if (((previousValue != value) 
							|| (this._Tram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tram.Entity = null;
						previousValue.Dois.Remove(this);
					}
					this._Tram.Entity = value;
					if ((value != null))
					{
						value.Dois.Add(this);
						this._MaTram = value.MaTram;
					}
					else
					{
						this._MaTram = default(System.Guid);
					}
					this.SendPropertyChanged("Tram");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tos(To entity)
		{
			this.SendPropertyChanging();
			entity.Doi = this;
		}
		
		private void detach_Tos(To entity)
		{
			this.SendPropertyChanging();
			entity.Doi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonGiaLuongBoSung")]
	public partial class DonGiaLuongBoSung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaDonGia;
		
		private string _MoTa;
		
		private decimal _DonGia;
		
		private string _DonViTinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonGiaChanging(System.Guid value);
    partial void OnMaDonGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    #endregion
		
		public DonGiaLuongBoSung()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonGia", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaDonGia
		{
			get
			{
				return this._MaDonGia;
			}
			set
			{
				if ((this._MaDonGia != value))
				{
					this.OnMaDonGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDonGia = value;
					this.SendPropertyChanged("MaDonGia");
					this.OnMaDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonGiaLuongXL")]
	public partial class DonGiaLuongXL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaLuongXL;
		
		private string _MoTa;
		
		private decimal _LoaiA;
		
		private decimal _LoaiB;
		
		private decimal _LoaiC;
		
		private decimal _BBH;
		
		private EntitySet<MacTau> _MacTaus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLuongXLChanging(System.Guid value);
    partial void OnMaLuongXLChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnLoaiAChanging(decimal value);
    partial void OnLoaiAChanged();
    partial void OnLoaiBChanging(decimal value);
    partial void OnLoaiBChanged();
    partial void OnLoaiCChanging(decimal value);
    partial void OnLoaiCChanged();
    partial void OnBBHChanging(decimal value);
    partial void OnBBHChanged();
    #endregion
		
		public DonGiaLuongXL()
		{
			this._MacTaus = new EntitySet<MacTau>(new Action<MacTau>(this.attach_MacTaus), new Action<MacTau>(this.detach_MacTaus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLuongXL", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaLuongXL
		{
			get
			{
				return this._MaLuongXL;
			}
			set
			{
				if ((this._MaLuongXL != value))
				{
					this.OnMaLuongXLChanging(value);
					this.SendPropertyChanging();
					this._MaLuongXL = value;
					this.SendPropertyChanged("MaLuongXL");
					this.OnMaLuongXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiA", DbType="Money NOT NULL")]
		public decimal LoaiA
		{
			get
			{
				return this._LoaiA;
			}
			set
			{
				if ((this._LoaiA != value))
				{
					this.OnLoaiAChanging(value);
					this.SendPropertyChanging();
					this._LoaiA = value;
					this.SendPropertyChanged("LoaiA");
					this.OnLoaiAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiB", DbType="Money NOT NULL")]
		public decimal LoaiB
		{
			get
			{
				return this._LoaiB;
			}
			set
			{
				if ((this._LoaiB != value))
				{
					this.OnLoaiBChanging(value);
					this.SendPropertyChanging();
					this._LoaiB = value;
					this.SendPropertyChanged("LoaiB");
					this.OnLoaiBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiC", DbType="Money NOT NULL")]
		public decimal LoaiC
		{
			get
			{
				return this._LoaiC;
			}
			set
			{
				if ((this._LoaiC != value))
				{
					this.OnLoaiCChanging(value);
					this.SendPropertyChanging();
					this._LoaiC = value;
					this.SendPropertyChanged("LoaiC");
					this.OnLoaiCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BBH", DbType="Money NOT NULL")]
		public decimal BBH
		{
			get
			{
				return this._BBH;
			}
			set
			{
				if ((this._BBH != value))
				{
					this.OnBBHChanging(value);
					this.SendPropertyChanging();
					this._BBH = value;
					this.SendPropertyChanged("BBH");
					this.OnBBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonGiaLuongXL_MacTau", Storage="_MacTaus", ThisKey="MaLuongXL", OtherKey="MaLuongXL")]
		public EntitySet<MacTau> MacTaus
		{
			get
			{
				return this._MacTaus;
			}
			set
			{
				this._MacTaus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MacTaus(MacTau entity)
		{
			this.SendPropertyChanging();
			entity.DonGiaLuongXL = this;
		}
		
		private void detach_MacTaus(MacTau entity)
		{
			this.SendPropertyChanging();
			entity.DonGiaLuongXL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ga")]
	public partial class Ga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGa;
		
		private string _TenGa;
		
		private System.Nullable<decimal> _Km;
		
		private EntitySet<HanhTrinh> _HanhTrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGaChanging(string value);
    partial void OnMaGaChanged();
    partial void OnTenGaChanging(string value);
    partial void OnTenGaChanged();
    partial void OnKmChanging(System.Nullable<decimal> value);
    partial void OnKmChanged();
    #endregion
		
		public Ga()
		{
			this._HanhTrinhs = new EntitySet<HanhTrinh>(new Action<HanhTrinh>(this.attach_HanhTrinhs), new Action<HanhTrinh>(this.detach_HanhTrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGa", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGa
		{
			get
			{
				return this._MaGa;
			}
			set
			{
				if ((this._MaGa != value))
				{
					this.OnMaGaChanging(value);
					this.SendPropertyChanging();
					this._MaGa = value;
					this.SendPropertyChanged("MaGa");
					this.OnMaGaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenGa
		{
			get
			{
				return this._TenGa;
			}
			set
			{
				if ((this._TenGa != value))
				{
					this.OnTenGaChanging(value);
					this.SendPropertyChanging();
					this._TenGa = value;
					this.SendPropertyChanged("TenGa");
					this.OnTenGaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Km", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Km
		{
			get
			{
				return this._Km;
			}
			set
			{
				if ((this._Km != value))
				{
					this.OnKmChanging(value);
					this.SendPropertyChanging();
					this._Km = value;
					this.SendPropertyChanged("Km");
					this.OnKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ga_HanhTrinh", Storage="_HanhTrinhs", ThisKey="MaGa", OtherKey="MaGa")]
		public EntitySet<HanhTrinh> HanhTrinhs
		{
			get
			{
				return this._HanhTrinhs;
			}
			set
			{
				this._HanhTrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HanhTrinhs(HanhTrinh entity)
		{
			this.SendPropertyChanging();
			entity.Ga = this;
		}
		
		private void detach_HanhTrinhs(HanhTrinh entity)
		{
			this.SendPropertyChanging();
			entity.Ga = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HanhTrinh")]
	public partial class HanhTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaHanhTrinh;
		
		private string _SoCoBao;
		
		private string _MaGa;
		
		private string _TrangThaiGa;
		
		private System.Nullable<System.DateTime> _NgayGioDen;
		
		private System.Nullable<System.DateTime> _NgayGioDi;
		
		private EntityRef<CoBao> _CoBao;
		
		private EntityRef<Ga> _Ga;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHanhTrinhChanging(System.Guid value);
    partial void OnMaHanhTrinhChanged();
    partial void OnSoCoBaoChanging(string value);
    partial void OnSoCoBaoChanged();
    partial void OnMaGaChanging(string value);
    partial void OnMaGaChanged();
    partial void OnTrangThaiGaChanging(string value);
    partial void OnTrangThaiGaChanged();
    partial void OnNgayGioDenChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGioDenChanged();
    partial void OnNgayGioDiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGioDiChanged();
    #endregion
		
		public HanhTrinh()
		{
			this._CoBao = default(EntityRef<CoBao>);
			this._Ga = default(EntityRef<Ga>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhTrinh", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaHanhTrinh
		{
			get
			{
				return this._MaHanhTrinh;
			}
			set
			{
				if ((this._MaHanhTrinh != value))
				{
					this.OnMaHanhTrinhChanging(value);
					this.SendPropertyChanging();
					this._MaHanhTrinh = value;
					this.SendPropertyChanged("MaHanhTrinh");
					this.OnMaHanhTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCoBao", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string SoCoBao
		{
			get
			{
				return this._SoCoBao;
			}
			set
			{
				if ((this._SoCoBao != value))
				{
					if (this._CoBao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoCoBaoChanging(value);
					this.SendPropertyChanging();
					this._SoCoBao = value;
					this.SendPropertyChanged("SoCoBao");
					this.OnSoCoBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGa", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaGa
		{
			get
			{
				return this._MaGa;
			}
			set
			{
				if ((this._MaGa != value))
				{
					if (this._Ga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGaChanging(value);
					this.SendPropertyChanging();
					this._MaGa = value;
					this.SendPropertyChanged("MaGa");
					this.OnMaGaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiGa", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string TrangThaiGa
		{
			get
			{
				return this._TrangThaiGa;
			}
			set
			{
				if ((this._TrangThaiGa != value))
				{
					this.OnTrangThaiGaChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiGa = value;
					this.SendPropertyChanged("TrangThaiGa");
					this.OnTrangThaiGaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioDen", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGioDen
		{
			get
			{
				return this._NgayGioDen;
			}
			set
			{
				if ((this._NgayGioDen != value))
				{
					this.OnNgayGioDenChanging(value);
					this.SendPropertyChanging();
					this._NgayGioDen = value;
					this.SendPropertyChanged("NgayGioDen");
					this.OnNgayGioDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioDi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGioDi
		{
			get
			{
				return this._NgayGioDi;
			}
			set
			{
				if ((this._NgayGioDi != value))
				{
					this.OnNgayGioDiChanging(value);
					this.SendPropertyChanging();
					this._NgayGioDi = value;
					this.SendPropertyChanged("NgayGioDi");
					this.OnNgayGioDiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_HanhTrinh", Storage="_CoBao", ThisKey="SoCoBao", OtherKey="SoCoBao", IsForeignKey=true)]
		public CoBao CoBao
		{
			get
			{
				return this._CoBao.Entity;
			}
			set
			{
				CoBao previousValue = this._CoBao.Entity;
				if (((previousValue != value) 
							|| (this._CoBao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoBao.Entity = null;
						previousValue.HanhTrinhs.Remove(this);
					}
					this._CoBao.Entity = value;
					if ((value != null))
					{
						value.HanhTrinhs.Add(this);
						this._SoCoBao = value.SoCoBao;
					}
					else
					{
						this._SoCoBao = default(string);
					}
					this.SendPropertyChanged("CoBao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ga_HanhTrinh", Storage="_Ga", ThisKey="MaGa", OtherKey="MaGa", IsForeignKey=true)]
		public Ga Ga
		{
			get
			{
				return this._Ga.Entity;
			}
			set
			{
				Ga previousValue = this._Ga.Entity;
				if (((previousValue != value) 
							|| (this._Ga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ga.Entity = null;
						previousValue.HanhTrinhs.Remove(this);
					}
					this._Ga.Entity = value;
					if ((value != null))
					{
						value.HanhTrinhs.Add(this);
						this._MaGa = value.MaGa;
					}
					else
					{
						this._MaGa = default(string);
					}
					this.SendPropertyChanged("Ga");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopPhepOm")]
	public partial class HopPhepOm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaHPO;
		
		private string _MaTaiXe;
		
		private string _TrangThai;
		
		private System.DateTime _NgayBatDau;
		
		private decimal _SoNgay;
		
		private EntityRef<TaiXe> _TaiXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHPOChanging(System.Guid value);
    partial void OnMaHPOChanged();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnSoNgayChanging(decimal value);
    partial void OnSoNgayChanged();
    #endregion
		
		public HopPhepOm()
		{
			this._TaiXe = default(EntityRef<TaiXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHPO", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaHPO
		{
			get
			{
				return this._MaHPO;
			}
			set
			{
				if ((this._MaHPO != value))
				{
					this.OnMaHPOChanging(value);
					this.SendPropertyChanging();
					this._MaHPO = value;
					this.SendPropertyChanged("MaHPO");
					this.OnMaHPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._TaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgay", DbType="Decimal(18,0) NOT NULL")]
		public decimal SoNgay
		{
			get
			{
				return this._SoNgay;
			}
			set
			{
				if ((this._SoNgay != value))
				{
					this.OnSoNgayChanging(value);
					this.SendPropertyChanging();
					this._SoNgay = value;
					this.SendPropertyChanged("SoNgay");
					this.OnSoNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_HopPhepOm", Storage="_TaiXe", ThisKey="MaTaiXe", OtherKey="MaTaiXe", IsForeignKey=true)]
		public TaiXe TaiXe
		{
			get
			{
				return this._TaiXe.Entity;
			}
			set
			{
				TaiXe previousValue = this._TaiXe.Entity;
				if (((previousValue != value) 
							|| (this._TaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiXe.Entity = null;
						previousValue.HopPhepOms.Remove(this);
					}
					this._TaiXe.Entity = value;
					if ((value != null))
					{
						value.HopPhepOms.Add(this);
						this._MaTaiXe = value.MaTaiXe;
					}
					else
					{
						this._MaTaiXe = default(string);
					}
					this.SendPropertyChanged("TaiXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhamXet")]
	public partial class KhamXet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaKhamXet;
		
		private string _MaDM;
		
		private System.Guid _MaNV;
		
		private System.DateTime _NgayGioBatDau;
		
		private System.DateTime _NgayGioKetThuc;
		
		private EntitySet<ChiTietKhamXet> _ChiTietKhamXets;
		
		private EntityRef<DauMay> _DauMay;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhamXetChanging(System.Guid value);
    partial void OnMaKhamXetChanged();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnMaNVChanging(System.Guid value);
    partial void OnMaNVChanged();
    partial void OnNgayGioBatDauChanging(System.DateTime value);
    partial void OnNgayGioBatDauChanged();
    partial void OnNgayGioKetThucChanging(System.DateTime value);
    partial void OnNgayGioKetThucChanged();
    #endregion
		
		public KhamXet()
		{
			this._ChiTietKhamXets = new EntitySet<ChiTietKhamXet>(new Action<ChiTietKhamXet>(this.attach_ChiTietKhamXets), new Action<ChiTietKhamXet>(this.detach_ChiTietKhamXets));
			this._DauMay = default(EntityRef<DauMay>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhamXet", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaKhamXet
		{
			get
			{
				return this._MaKhamXet;
			}
			set
			{
				if ((this._MaKhamXet != value))
				{
					this.OnMaKhamXetChanging(value);
					this.SendPropertyChanging();
					this._MaKhamXet = value;
					this.SendPropertyChanged("MaKhamXet");
					this.OnMaKhamXetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					if (this._DauMay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioBatDau
		{
			get
			{
				return this._NgayGioBatDau;
			}
			set
			{
				if ((this._NgayGioBatDau != value))
				{
					this.OnNgayGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayGioBatDau = value;
					this.SendPropertyChanged("NgayGioBatDau");
					this.OnNgayGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioKetThuc
		{
			get
			{
				return this._NgayGioKetThuc;
			}
			set
			{
				if ((this._NgayGioKetThuc != value))
				{
					this.OnNgayGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayGioKetThuc = value;
					this.SendPropertyChanged("NgayGioKetThuc");
					this.OnNgayGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhamXet_ChiTietKhamXet", Storage="_ChiTietKhamXets", ThisKey="MaKhamXet", OtherKey="MaKhamXet")]
		public EntitySet<ChiTietKhamXet> ChiTietKhamXets
		{
			get
			{
				return this._ChiTietKhamXets;
			}
			set
			{
				this._ChiTietKhamXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauMay_KhamXet", Storage="_DauMay", ThisKey="MaDM", OtherKey="MaDM", IsForeignKey=true)]
		public DauMay DauMay
		{
			get
			{
				return this._DauMay.Entity;
			}
			set
			{
				DauMay previousValue = this._DauMay.Entity;
				if (((previousValue != value) 
							|| (this._DauMay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DauMay.Entity = null;
						previousValue.KhamXets.Remove(this);
					}
					this._DauMay.Entity = value;
					if ((value != null))
					{
						value.KhamXets.Add(this);
						this._MaDM = value.MaDM;
					}
					else
					{
						this._MaDM = default(string);
					}
					this.SendPropertyChanged("DauMay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhamXet", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.KhamXets.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.KhamXets.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(System.Guid);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhamXets(ChiTietKhamXet entity)
		{
			this.SendPropertyChanging();
			entity.KhamXet = this;
		}
		
		private void detach_ChiTietKhamXets(ChiTietKhamXet entity)
		{
			this.SendPropertyChanging();
			entity.KhamXet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiDauMay")]
	public partial class LoaiDauMay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaLoai;
		
		private string _TenLoai;
		
		private System.Nullable<double> _TanSoThap;
		
		private System.Nullable<double> _Trongluong;
		
		private EntitySet<DauMay> _DauMays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(System.Guid value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnTanSoThapChanging(System.Nullable<double> value);
    partial void OnTanSoThapChanged();
    partial void OnTrongluongChanging(System.Nullable<double> value);
    partial void OnTrongluongChanged();
    #endregion
		
		public LoaiDauMay()
		{
			this._DauMays = new EntitySet<DauMay>(new Action<DauMay>(this.attach_DauMays), new Action<DauMay>(this.detach_DauMays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanSoThap", DbType="Float")]
		public System.Nullable<double> TanSoThap
		{
			get
			{
				return this._TanSoThap;
			}
			set
			{
				if ((this._TanSoThap != value))
				{
					this.OnTanSoThapChanging(value);
					this.SendPropertyChanging();
					this._TanSoThap = value;
					this.SendPropertyChanged("TanSoThap");
					this.OnTanSoThapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trongluong", DbType="Float")]
		public System.Nullable<double> Trongluong
		{
			get
			{
				return this._Trongluong;
			}
			set
			{
				if ((this._Trongluong != value))
				{
					this.OnTrongluongChanging(value);
					this.SendPropertyChanging();
					this._Trongluong = value;
					this.SendPropertyChanged("Trongluong");
					this.OnTrongluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDauMay_DauMay", Storage="_DauMays", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<DauMay> DauMays
		{
			get
			{
				return this._DauMays;
			}
			set
			{
				this._DauMays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DauMays(DauMay entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDauMay = this;
		}
		
		private void detach_DauMays(DauMay entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDauMay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MacTau")]
	public partial class MacTau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMacTau;
		
		private System.Guid _MaCT;
		
		private System.Guid _MaLuongXL;
		
		private string _TenMacTau;
		
		private EntitySet<CoBao> _CoBaos;
		
		private EntityRef<CongTy> _CongTy;
		
		private EntityRef<DonGiaLuongXL> _DonGiaLuongXL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMacTauChanging(string value);
    partial void OnMaMacTauChanged();
    partial void OnMaCTChanging(System.Guid value);
    partial void OnMaCTChanged();
    partial void OnMaLuongXLChanging(System.Guid value);
    partial void OnMaLuongXLChanged();
    partial void OnTenMacTauChanging(string value);
    partial void OnTenMacTauChanged();
    #endregion
		
		public MacTau()
		{
			this._CoBaos = new EntitySet<CoBao>(new Action<CoBao>(this.attach_CoBaos), new Action<CoBao>(this.detach_CoBaos));
			this._CongTy = default(EntityRef<CongTy>);
			this._DonGiaLuongXL = default(EntityRef<DonGiaLuongXL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMacTau", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMacTau
		{
			get
			{
				return this._MaMacTau;
			}
			set
			{
				if ((this._MaMacTau != value))
				{
					this.OnMaMacTauChanging(value);
					this.SendPropertyChanging();
					this._MaMacTau = value;
					this.SendPropertyChanged("MaMacTau");
					this.OnMaMacTauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._CongTy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLuongXL", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaLuongXL
		{
			get
			{
				return this._MaLuongXL;
			}
			set
			{
				if ((this._MaLuongXL != value))
				{
					if (this._DonGiaLuongXL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLuongXLChanging(value);
					this.SendPropertyChanging();
					this._MaLuongXL = value;
					this.SendPropertyChanged("MaLuongXL");
					this.OnMaLuongXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMacTau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMacTau
		{
			get
			{
				return this._TenMacTau;
			}
			set
			{
				if ((this._TenMacTau != value))
				{
					this.OnTenMacTauChanging(value);
					this.SendPropertyChanging();
					this._TenMacTau = value;
					this.SendPropertyChanged("TenMacTau");
					this.OnTenMacTauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MacTau_CoBao", Storage="_CoBaos", ThisKey="MaMacTau", OtherKey="MaMacTau")]
		public EntitySet<CoBao> CoBaos
		{
			get
			{
				return this._CoBaos;
			}
			set
			{
				this._CoBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTy_MacTau", Storage="_CongTy", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public CongTy CongTy
		{
			get
			{
				return this._CongTy.Entity;
			}
			set
			{
				CongTy previousValue = this._CongTy.Entity;
				if (((previousValue != value) 
							|| (this._CongTy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTy.Entity = null;
						previousValue.MacTaus.Remove(this);
					}
					this._CongTy.Entity = value;
					if ((value != null))
					{
						value.MacTaus.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(System.Guid);
					}
					this.SendPropertyChanged("CongTy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonGiaLuongXL_MacTau", Storage="_DonGiaLuongXL", ThisKey="MaLuongXL", OtherKey="MaLuongXL", IsForeignKey=true)]
		public DonGiaLuongXL DonGiaLuongXL
		{
			get
			{
				return this._DonGiaLuongXL.Entity;
			}
			set
			{
				DonGiaLuongXL previousValue = this._DonGiaLuongXL.Entity;
				if (((previousValue != value) 
							|| (this._DonGiaLuongXL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonGiaLuongXL.Entity = null;
						previousValue.MacTaus.Remove(this);
					}
					this._DonGiaLuongXL.Entity = value;
					if ((value != null))
					{
						value.MacTaus.Add(this);
						this._MaLuongXL = value.MaLuongXL;
					}
					else
					{
						this._MaLuongXL = default(System.Guid);
					}
					this.SendPropertyChanged("DonGiaLuongXL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.MacTau = this;
		}
		
		private void detach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.MacTau = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaNV;
		
		private string _TenNV;
		
		private string _DiaChi;
		
		private string _UserName;
		
		private string _Pass;
		
		private string _DienThoai;
		
		private EntitySet<CoBao> _CoBaos;
		
		private EntitySet<KhamXet> _KhamXets;
		
		private EntitySet<ThuongTruc> _ThuongTrucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(System.Guid value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public NhanVien()
		{
			this._CoBaos = new EntitySet<CoBao>(new Action<CoBao>(this.attach_CoBaos), new Action<CoBao>(this.detach_CoBaos));
			this._KhamXets = new EntitySet<KhamXet>(new Action<KhamXet>(this.attach_KhamXets), new Action<KhamXet>(this.detach_KhamXets));
			this._ThuongTrucs = new EntitySet<ThuongTruc>(new Action<ThuongTruc>(this.attach_ThuongTrucs), new Action<ThuongTruc>(this.detach_ThuongTrucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CoBao", Storage="_CoBaos", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<CoBao> CoBaos
		{
			get
			{
				return this._CoBaos;
			}
			set
			{
				this._CoBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhamXet", Storage="_KhamXets", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<KhamXet> KhamXets
		{
			get
			{
				return this._KhamXets;
			}
			set
			{
				this._KhamXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuongTruc", Storage="_ThuongTrucs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<ThuongTruc> ThuongTrucs
		{
			get
			{
				return this._ThuongTrucs;
			}
			set
			{
				this._ThuongTrucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_CoBaos(CoBao entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_KhamXets(KhamXet entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_KhamXets(KhamXet entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_ThuongTrucs(ThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ThuongTrucs(ThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiXe")]
	public partial class TaiXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTaiXe;
		
		private string _TenTaiXe;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private bool _Tai;
		
		private System.Nullable<double> _HeSoLuong;
		
		private System.Guid _MaTo;
		
		private EntitySet<ChiTietKhamXet> _ChiTietKhamXets;
		
		private EntitySet<ChiTietThuongTruc> _ChiTietThuongTrucs;
		
		private EntitySet<CoBaoLaiTau> _CoBaoLaiTaus;
		
		private EntitySet<HopPhepOm> _HopPhepOms;
		
		private EntitySet<TheoTau> _TheoTaus;
		
		private EntityRef<To> _To;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTenTaiXeChanging(string value);
    partial void OnTenTaiXeChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnTaiChanging(bool value);
    partial void OnTaiChanged();
    partial void OnHeSoLuongChanging(System.Nullable<double> value);
    partial void OnHeSoLuongChanged();
    partial void OnMaToChanging(System.Guid value);
    partial void OnMaToChanged();
    #endregion
		
		public TaiXe()
		{
			this._ChiTietKhamXets = new EntitySet<ChiTietKhamXet>(new Action<ChiTietKhamXet>(this.attach_ChiTietKhamXets), new Action<ChiTietKhamXet>(this.detach_ChiTietKhamXets));
			this._ChiTietThuongTrucs = new EntitySet<ChiTietThuongTruc>(new Action<ChiTietThuongTruc>(this.attach_ChiTietThuongTrucs), new Action<ChiTietThuongTruc>(this.detach_ChiTietThuongTrucs));
			this._CoBaoLaiTaus = new EntitySet<CoBaoLaiTau>(new Action<CoBaoLaiTau>(this.attach_CoBaoLaiTaus), new Action<CoBaoLaiTau>(this.detach_CoBaoLaiTaus));
			this._HopPhepOms = new EntitySet<HopPhepOm>(new Action<HopPhepOm>(this.attach_HopPhepOms), new Action<HopPhepOm>(this.detach_HopPhepOms));
			this._TheoTaus = new EntitySet<TheoTau>(new Action<TheoTau>(this.attach_TheoTaus), new Action<TheoTau>(this.detach_TheoTaus));
			this._To = default(EntityRef<To>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiXe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTaiXe
		{
			get
			{
				return this._TenTaiXe;
			}
			set
			{
				if ((this._TenTaiXe != value))
				{
					this.OnTenTaiXeChanging(value);
					this.SendPropertyChanging();
					this._TenTaiXe = value;
					this.SendPropertyChanged("TenTaiXe");
					this.OnTenTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tai", DbType="Bit NOT NULL")]
		public bool Tai
		{
			get
			{
				return this._Tai;
			}
			set
			{
				if ((this._Tai != value))
				{
					this.OnTaiChanging(value);
					this.SendPropertyChanging();
					this._Tai = value;
					this.SendPropertyChanged("Tai");
					this.OnTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Float")]
		public System.Nullable<double> HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTo", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaTo
		{
			get
			{
				return this._MaTo;
			}
			set
			{
				if ((this._MaTo != value))
				{
					if (this._To.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChanging(value);
					this.SendPropertyChanging();
					this._MaTo = value;
					this.SendPropertyChanged("MaTo");
					this.OnMaToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_ChiTietKhamXet", Storage="_ChiTietKhamXets", ThisKey="MaTaiXe", OtherKey="MaTaiXe")]
		public EntitySet<ChiTietKhamXet> ChiTietKhamXets
		{
			get
			{
				return this._ChiTietKhamXets;
			}
			set
			{
				this._ChiTietKhamXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_ChiTietThuongTruc", Storage="_ChiTietThuongTrucs", ThisKey="MaTaiXe", OtherKey="MaTaiXe")]
		public EntitySet<ChiTietThuongTruc> ChiTietThuongTrucs
		{
			get
			{
				return this._ChiTietThuongTrucs;
			}
			set
			{
				this._ChiTietThuongTrucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_CoBaoLaiTau", Storage="_CoBaoLaiTaus", ThisKey="MaTaiXe", OtherKey="MaTaiXe")]
		public EntitySet<CoBaoLaiTau> CoBaoLaiTaus
		{
			get
			{
				return this._CoBaoLaiTaus;
			}
			set
			{
				this._CoBaoLaiTaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_HopPhepOm", Storage="_HopPhepOms", ThisKey="MaTaiXe", OtherKey="MaTaiXe")]
		public EntitySet<HopPhepOm> HopPhepOms
		{
			get
			{
				return this._HopPhepOms;
			}
			set
			{
				this._HopPhepOms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_TheoTau", Storage="_TheoTaus", ThisKey="MaTaiXe", OtherKey="MaTaiXe")]
		public EntitySet<TheoTau> TheoTaus
		{
			get
			{
				return this._TheoTaus;
			}
			set
			{
				this._TheoTaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="To_TaiXe", Storage="_To", ThisKey="MaTo", OtherKey="MaTo", IsForeignKey=true)]
		public To To
		{
			get
			{
				return this._To.Entity;
			}
			set
			{
				To previousValue = this._To.Entity;
				if (((previousValue != value) 
							|| (this._To.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._To.Entity = null;
						previousValue.TaiXes.Remove(this);
					}
					this._To.Entity = value;
					if ((value != null))
					{
						value.TaiXes.Add(this);
						this._MaTo = value.MaTo;
					}
					else
					{
						this._MaTo = default(System.Guid);
					}
					this.SendPropertyChanged("To");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhamXets(ChiTietKhamXet entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = this;
		}
		
		private void detach_ChiTietKhamXets(ChiTietKhamXet entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = null;
		}
		
		private void attach_ChiTietThuongTrucs(ChiTietThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = this;
		}
		
		private void detach_ChiTietThuongTrucs(ChiTietThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = null;
		}
		
		private void attach_CoBaoLaiTaus(CoBaoLaiTau entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = this;
		}
		
		private void detach_CoBaoLaiTaus(CoBaoLaiTau entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = null;
		}
		
		private void attach_HopPhepOms(HopPhepOm entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = this;
		}
		
		private void detach_HopPhepOms(HopPhepOm entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = null;
		}
		
		private void attach_TheoTaus(TheoTau entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = this;
		}
		
		private void detach_TheoTaus(TheoTau entity)
		{
			this.SendPropertyChanging();
			entity.TaiXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheoTau")]
	public partial class TheoTau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaTheoTau;
		
		private string _SoCoBao;
		
		private string _MaTaiXe;
		
		private bool _Tai;
		
		private decimal _GioTheoTau;
		
		private System.Nullable<decimal> _GioLuuTru;
		
		private EntityRef<CoBao> _CoBao;
		
		private EntityRef<TaiXe> _TaiXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheoTauChanging(System.Guid value);
    partial void OnMaTheoTauChanged();
    partial void OnSoCoBaoChanging(string value);
    partial void OnSoCoBaoChanged();
    partial void OnMaTaiXeChanging(string value);
    partial void OnMaTaiXeChanged();
    partial void OnTaiChanging(bool value);
    partial void OnTaiChanged();
    partial void OnGioTheoTauChanging(decimal value);
    partial void OnGioTheoTauChanged();
    partial void OnGioLuuTruChanging(System.Nullable<decimal> value);
    partial void OnGioLuuTruChanged();
    #endregion
		
		public TheoTau()
		{
			this._CoBao = default(EntityRef<CoBao>);
			this._TaiXe = default(EntityRef<TaiXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheoTau", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaTheoTau
		{
			get
			{
				return this._MaTheoTau;
			}
			set
			{
				if ((this._MaTheoTau != value))
				{
					this.OnMaTheoTauChanging(value);
					this.SendPropertyChanging();
					this._MaTheoTau = value;
					this.SendPropertyChanged("MaTheoTau");
					this.OnMaTheoTauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCoBao", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string SoCoBao
		{
			get
			{
				return this._SoCoBao;
			}
			set
			{
				if ((this._SoCoBao != value))
				{
					if (this._CoBao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoCoBaoChanging(value);
					this.SendPropertyChanging();
					this._SoCoBao = value;
					this.SendPropertyChanged("SoCoBao");
					this.OnSoCoBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiXe", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._TaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tai", DbType="Bit NOT NULL")]
		public bool Tai
		{
			get
			{
				return this._Tai;
			}
			set
			{
				if ((this._Tai != value))
				{
					this.OnTaiChanging(value);
					this.SendPropertyChanging();
					this._Tai = value;
					this.SendPropertyChanged("Tai");
					this.OnTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioTheoTau", DbType="Decimal(18,0) NOT NULL")]
		public decimal GioTheoTau
		{
			get
			{
				return this._GioTheoTau;
			}
			set
			{
				if ((this._GioTheoTau != value))
				{
					this.OnGioTheoTauChanging(value);
					this.SendPropertyChanging();
					this._GioTheoTau = value;
					this.SendPropertyChanged("GioTheoTau");
					this.OnGioTheoTauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioLuuTru", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GioLuuTru
		{
			get
			{
				return this._GioLuuTru;
			}
			set
			{
				if ((this._GioLuuTru != value))
				{
					this.OnGioLuuTruChanging(value);
					this.SendPropertyChanging();
					this._GioLuuTru = value;
					this.SendPropertyChanged("GioLuuTru");
					this.OnGioLuuTruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoBao_TheoTau", Storage="_CoBao", ThisKey="SoCoBao", OtherKey="SoCoBao", IsForeignKey=true)]
		public CoBao CoBao
		{
			get
			{
				return this._CoBao.Entity;
			}
			set
			{
				CoBao previousValue = this._CoBao.Entity;
				if (((previousValue != value) 
							|| (this._CoBao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoBao.Entity = null;
						previousValue.TheoTaus.Remove(this);
					}
					this._CoBao.Entity = value;
					if ((value != null))
					{
						value.TheoTaus.Add(this);
						this._SoCoBao = value.SoCoBao;
					}
					else
					{
						this._SoCoBao = default(string);
					}
					this.SendPropertyChanged("CoBao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiXe_TheoTau", Storage="_TaiXe", ThisKey="MaTaiXe", OtherKey="MaTaiXe", IsForeignKey=true)]
		public TaiXe TaiXe
		{
			get
			{
				return this._TaiXe.Entity;
			}
			set
			{
				TaiXe previousValue = this._TaiXe.Entity;
				if (((previousValue != value) 
							|| (this._TaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiXe.Entity = null;
						previousValue.TheoTaus.Remove(this);
					}
					this._TaiXe.Entity = value;
					if ((value != null))
					{
						value.TheoTaus.Add(this);
						this._MaTaiXe = value.MaTaiXe;
					}
					else
					{
						this._MaTaiXe = default(string);
					}
					this.SendPropertyChanged("TaiXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongTruc")]
	public partial class ThuongTruc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaThuongTruc;
		
		private System.Guid _MaTram;
		
		private System.Guid _MaNV;
		
		private System.DateTime _NgayGioBatDau;
		
		private System.DateTime _NgayGioKetThuc;
		
		private EntitySet<ChiTietThuongTruc> _ChiTietThuongTrucs;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Tram> _Tram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuongTrucChanging(System.Guid value);
    partial void OnMaThuongTrucChanged();
    partial void OnMaTramChanging(System.Guid value);
    partial void OnMaTramChanged();
    partial void OnMaNVChanging(System.Guid value);
    partial void OnMaNVChanged();
    partial void OnNgayGioBatDauChanging(System.DateTime value);
    partial void OnNgayGioBatDauChanged();
    partial void OnNgayGioKetThucChanging(System.DateTime value);
    partial void OnNgayGioKetThucChanged();
    #endregion
		
		public ThuongTruc()
		{
			this._ChiTietThuongTrucs = new EntitySet<ChiTietThuongTruc>(new Action<ChiTietThuongTruc>(this.attach_ChiTietThuongTrucs), new Action<ChiTietThuongTruc>(this.detach_ChiTietThuongTrucs));
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Tram = default(EntityRef<Tram>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuongTruc", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaThuongTruc
		{
			get
			{
				return this._MaThuongTruc;
			}
			set
			{
				if ((this._MaThuongTruc != value))
				{
					this.OnMaThuongTrucChanging(value);
					this.SendPropertyChanging();
					this._MaThuongTruc = value;
					this.SendPropertyChanged("MaThuongTruc");
					this.OnMaThuongTrucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTram", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaTram
		{
			get
			{
				return this._MaTram;
			}
			set
			{
				if ((this._MaTram != value))
				{
					if (this._Tram.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTramChanging(value);
					this.SendPropertyChanging();
					this._MaTram = value;
					this.SendPropertyChanged("MaTram");
					this.OnMaTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioBatDau
		{
			get
			{
				return this._NgayGioBatDau;
			}
			set
			{
				if ((this._NgayGioBatDau != value))
				{
					this.OnNgayGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayGioBatDau = value;
					this.SendPropertyChanged("NgayGioBatDau");
					this.OnNgayGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioKetThuc
		{
			get
			{
				return this._NgayGioKetThuc;
			}
			set
			{
				if ((this._NgayGioKetThuc != value))
				{
					this.OnNgayGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayGioKetThuc = value;
					this.SendPropertyChanged("NgayGioKetThuc");
					this.OnNgayGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongTruc_ChiTietThuongTruc", Storage="_ChiTietThuongTrucs", ThisKey="MaThuongTruc", OtherKey="MaThuongTruc")]
		public EntitySet<ChiTietThuongTruc> ChiTietThuongTrucs
		{
			get
			{
				return this._ChiTietThuongTrucs;
			}
			set
			{
				this._ChiTietThuongTrucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuongTruc", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ThuongTrucs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ThuongTrucs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(System.Guid);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tram_ThuongTruc", Storage="_Tram", ThisKey="MaTram", OtherKey="MaTram", IsForeignKey=true)]
		public Tram Tram
		{
			get
			{
				return this._Tram.Entity;
			}
			set
			{
				Tram previousValue = this._Tram.Entity;
				if (((previousValue != value) 
							|| (this._Tram.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tram.Entity = null;
						previousValue.ThuongTrucs.Remove(this);
					}
					this._Tram.Entity = value;
					if ((value != null))
					{
						value.ThuongTrucs.Add(this);
						this._MaTram = value.MaTram;
					}
					else
					{
						this._MaTram = default(System.Guid);
					}
					this.SendPropertyChanged("Tram");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietThuongTrucs(ChiTietThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.ThuongTruc = this;
		}
		
		private void detach_ChiTietThuongTrucs(ChiTietThuongTruc entity)
		{
			this.SendPropertyChanging();
			entity.ThuongTruc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[To]")]
	public partial class To : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaTo;
		
		private string _TenTo;
		
		private System.Guid _MaDoi;
		
		private EntitySet<TaiXe> _TaiXes;
		
		private EntityRef<Doi> _Doi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaToChanging(System.Guid value);
    partial void OnMaToChanged();
    partial void OnTenToChanging(string value);
    partial void OnTenToChanged();
    partial void OnMaDoiChanging(System.Guid value);
    partial void OnMaDoiChanged();
    #endregion
		
		public To()
		{
			this._TaiXes = new EntitySet<TaiXe>(new Action<TaiXe>(this.attach_TaiXes), new Action<TaiXe>(this.detach_TaiXes));
			this._Doi = default(EntityRef<Doi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTo", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaTo
		{
			get
			{
				return this._MaTo;
			}
			set
			{
				if ((this._MaTo != value))
				{
					this.OnMaToChanging(value);
					this.SendPropertyChanging();
					this._MaTo = value;
					this.SendPropertyChanged("MaTo");
					this.OnMaToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTo
		{
			get
			{
				return this._TenTo;
			}
			set
			{
				if ((this._TenTo != value))
				{
					this.OnTenToChanging(value);
					this.SendPropertyChanging();
					this._TenTo = value;
					this.SendPropertyChanged("TenTo");
					this.OnTenToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoi", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MaDoi
		{
			get
			{
				return this._MaDoi;
			}
			set
			{
				if ((this._MaDoi != value))
				{
					if (this._Doi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDoiChanging(value);
					this.SendPropertyChanging();
					this._MaDoi = value;
					this.SendPropertyChanged("MaDoi");
					this.OnMaDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="To_TaiXe", Storage="_TaiXes", ThisKey="MaTo", OtherKey="MaTo")]
		public EntitySet<TaiXe> TaiXes
		{
			get
			{
				return this._TaiXes;
			}
			set
			{
				this._TaiXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doi_To", Storage="_Doi", ThisKey="MaDoi", OtherKey="MaDoi", IsForeignKey=true)]
		public Doi Doi
		{
			get
			{
				return this._Doi.Entity;
			}
			set
			{
				Doi previousValue = this._Doi.Entity;
				if (((previousValue != value) 
							|| (this._Doi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doi.Entity = null;
						previousValue.Tos.Remove(this);
					}
					this._Doi.Entity = value;
					if ((value != null))
					{
						value.Tos.Add(this);
						this._MaDoi = value.MaDoi;
					}
					else
					{
						this._MaDoi = default(System.Guid);
					}
					this.SendPropertyChanged("Doi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiXes(TaiXe entity)
		{
			this.SendPropertyChanging();
			entity.To = this;
		}
		
		private void detach_TaiXes(TaiXe entity)
		{
			this.SendPropertyChanging();
			entity.To = null;
		}
	}
}
#pragma warning restore 1591
